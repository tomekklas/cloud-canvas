---
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::LanguageExtensions
Description: >-
{% if short_module_description%}  Short project description: {{ short_module_description }} {% endif %}
  Build Id: <<<BUILD_ID>>>
  Version No: <<<VERSION_NUMBER>>>
  CloudCanvas boilerplate version: {{ TEMPLATE_VERSION }}
  Created by: {% if owner_name%}{{ owner_name }} /{% endif %} {% if owner_email%}{{ owner_email }}{% endif %}
  Repository Name: {{ _copier_conf.dst_path }}

Parameters:

  Environment:
    Type: String
    Default: Prod
    AllowedValues:
      - Dev
      - Prod

  LogRetentionInDays:
    Type: Number
    Default: 180
    AllowedValues:
      - 1
      - 3
      - 5
      - 7
      - 14
      - 30
      - 60
      - 90
      - 120
      - 150
      - 180
      - 365
      - 400
      - 545
      - 731
      - 1827
      - 3653

Conditions: 
  IsProd: !Equals [!Ref Environment, Prod]
  IsDev: !Equals [!Ref Environment, Dev]

Mappings:

  Environment:
    Dev:
      StateMachineLogLevel: ALL
    Prod:
      StateMachineLogLevel: ERROR

Resources:

{% if include_common_lambda_layer == True %}
  ############################################
  # Common lambda layer
  CommonLambdaLayer:
    Type: AWS::Lambda::LayerVersion
    Properties: 
      CompatibleRuntimes: 
        - python3.9
      Content: 
        S3Bucket: <<<ARTEFACT_BUCKET>>>
        S3Key: artefacts/{{ _copier_conf.dst_path }}/{{ module_directory_name }}/<<<VERSION_NUMBER>>>/<<<BUILD_ID>>>/project/lambda/layers/{{common_lambda_layer_name | slug}}.zip
      Description: {{ project_name }} - Common Lambda Layer
  # Common lambda layer
  ############################################
{% endif %}

{% if include_lambda_scaffolding == True %}
  ############################################
  # Generic CloudWatch Logs KMSKey related
  GenericCloudWatchLogsKMSKey:
    Type: AWS::KMS::Key
    Properties:
      Enabled: true
      KeyPolicy:
        Id: key-for-loggroups
        Version: '2012-10-17'
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Ref AWS::AccountId
            Action: kms:*
            Resource: '*'
          - Sid: Enable CloudWatch Logs Permissions
            Effect: Allow
            Principal:
              Service:
                - !Sub logs.${AWS::Region}.amazonaws.com
            Action:
              - kms:Encrypt*
              - kms:Decrypt*
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:Describe*
              - kms:UpdateAlias
            Resource: '*'

  GenericCloudWatchLogsKMSKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: alias/{{ module_name | title }}
      TargetKeyId: !Ref GenericCloudWatchLogsKMSKey
  # Generic CloudWatch Logs KMSKey related
  ############################################

{% set lambda_list = lambda_names.split(",") %}
{% for lambda_name_raw in lambda_list %}
{% set trimmed_lambda = lambda_name_raw | trim | title %}
  ############################################
  # {{ lambda_name }} Lambda related
  {{ lambda_name }}LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
        - !If [ IsDev, arn:aws:iam::aws:policy/AdministratorAccess, !Ref AWS::NoValue ]
      Policies:
      - PolicyName: AllowLambdaLogs
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: arn:aws:logs:*:*:*

  {{ lambda_name }}Lambda:
    Type: AWS::Lambda::Function
    Properties:
      Description: {{ lambda_name }} Lambda
      Handler: lambda_function.lambda_handler
      MemorySize: 1024
      Role: !GetAtt {{ lambda_name }}LambdaExecutionRole.Arn
      {% if include_common_lambda_layer == True %}
      Layers:
        - !Ref CommonLambdaLayer
      {% endif %}
      Runtime: python3.11
      Timeout: 90
      Code:
        S3Bucket: <<<ARTEFACT_BUCKET>>>
        S3Key: artefacts/{{ _copier_conf.dst_path }}/{{ module_directory_name }}/<<<VERSION_NUMBER>>>/<<<BUILD_ID>>>/project/lambda/functions/{{ lambda_name }}.zip

  # {{ lambda_name | title }} Lambda related
  ############################################
{% endfor %}

{% endif %}