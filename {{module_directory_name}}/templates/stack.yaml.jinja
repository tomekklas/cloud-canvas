---
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::LanguageExtensions
Description: >-   
  {% if short_module_description %}{{ short_module_description }}{% endif %}

Metadata:
  {% if owner_name %}Author: {{ owner_name }}{% endif %}
  {% if owner_email %}Email: {{ owner_email }}{% endif %}
  Repository name: {{ _copier_conf.dst_path }}
  Cloud Canvas version: {{ CLOUD_CANVAS_TEMPLATE_VERSION }}
  Build date: <<<BUILD_DATE>>>
  Version: {{ PRODUCT_VERSION }}
  License: {{ copyright_license }}

Parameters:

  Environment:
    Type: String
    Default: Prod
    AllowedValues:
      - Dev
      - Prod

  LogRetentionInDays:
    Type: Number
    Default: 180
    AllowedValues:
      - 1
      - 3
      - 5
      - 7
      - 14
      - 30
      - 60
      - 90
      - 120
      - 150
      - 180
      - 365
      - 400
      - 545
      - 731
      - 1827
      - 3653

Conditions: 
  IsProd: !Equals [!Ref Environment, Prod]
  IsDev: !Equals [!Ref Environment, Dev]

Mappings:
  Environment:
    Dev:
      StateMachineLogLevel: DEBUG
    Prod:
      StateMachineLogLevel: INFO

Resources:
{%- if include_common_lambda_layer %}
  ############################################
  # Common Lambda Layer
  CommonLambdaLayer:
    Type: AWS::Lambda::LayerVersion
    Properties:
      Description: Common Lambda Layer
      CompatibleArchitectures:
        - arm64
      CompatibleRuntimes: 
        - python{{PYTHON_VERSION}}
      Content: 
        S3Bucket: <<<ARTIFACT_BUCKET>>>
        S3Key: <<<{{ module_name | slug }}_lambda_layers_common>>>
  # Common Lambda Layer
  ############################################
{% endif %}

{%- if include_lambda_scaffolding %}
{%- set lambda_list = lambda_names.split(",") %}
{%- for lambda_name in lambda_list %}
  ############################################
  # {{ lambda_name | to_camel }} Lambda related
  {{ lambda_name | to_camel }}LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - !If [ IsDev, arn:aws:iam::aws:policy/AdministratorAccess, !Ref AWS::NoValue ]
      Policies:
      - PolicyName: AllowLambdaLogs
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: arn:aws:logs:*:*:*

  {{ lambda_name | to_camel }}Lambda:
    Type: AWS::Lambda::Function
    Properties:
      Description: {{ lambda_name | to_camel }} Lambda
      Handler: lambda_function.lambda_handler
      MemorySize: 1024
      Runtime: python3.11
      Timeout: 90
      Architectures:
        - arm64
      LoggingConfig:
        ApplicationLogLevel: !FindInMap [Environment, !Ref Environment, StateMachineLogLevel]
        LogFormat: JSON
        LogGroup: 
          !Join 
            - /
            - - /aws/lambda/{{ _copier_conf.dst_path }}/{{ PRODUCT_VERSION }}
              - !Select [4, !Split [-, !Select [2, !Split [/, !Ref AWS::StackId]]]]
              - {{ module_name | slug }}
              - {{ lambda_name | to_camel }}
        SystemLogLevel: !FindInMap [Environment, !Ref Environment, StateMachineLogLevel]
      Role: !GetAtt {{ lambda_name | to_camel }}LambdaExecutionRole.Arn
      {%- if include_common_lambda_layer %}
      Layers:
        - !Ref CommonLambdaLayer
      {%- endif %}
      Code:
        S3Bucket: <<<ARTIFACT_BUCKET>>>
        S3Key: <<<{{ module_name | slug}}_lambda_functions_{{ lambda_name | slug }}>>>

  {{ lambda_name | to_camel }}LambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: !Ref LogRetentionInDays
      LogGroupName: !Join
                      - /
                      - - /aws/lambda/{{ _copier_conf.dst_path }}/{{ PRODUCT_VERSION }}
                        - !Select [4, !Split [-, !Select [2, !Split [/, !Ref AWS::StackId]]]]
                        - {{ module_name | slug}}
                        - {{ lambda_name | to_camel }}
  # {{ lambda_name | to_camel }} Lambda related
  ############################################
{% endfor %}
{%- endif -%}

Outputs:
  InstallationId:
    Description: ID of this particular installation.
    Value: !Select [4, !Split ['-', !Select ['2', !Split ['/', !Ref 'AWS::StackId']]]]