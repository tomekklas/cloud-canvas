---
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::LanguageExtensions
Description: >-   
  {% if short_module_description %}{{ short_module_description }}{% endif %}
{%- macro path_safe(name) %}
  {{- name | trim | replace(" ", "-") | replace("/", "-") | replace("\\", "-") | replace(":", "-") | replace("*", "-") | replace("?", "-") | replace("\"", "-") | replace("<", "-") | replace(">", "-") | replace("|", "-") }}
{%- endmacro %}
{%- set module_name_path_safe = path_safe(module_name) %}

Metadata:
  {% if owner_name %}Author: {{ owner_name }}{% endif %}
  {% if owner_email %}Email: {{ owner_email }}{% endif %}
  Repository name: {{ _copier_conf.dst_path }}
  Cloud Canvas version: {{ CLOUD_CANVAS_TEMPLATE_VERSION }}
  Build date: <<<BUILD_DATE>>>
  Version: {{ PRODUCT_VERSION }}
  #License:

Parameters:

  Environment:
    Type: String
    Default: Prod
    AllowedValues:
      - Dev
      - Prod

  LogRetentionInDays:
    Type: Number
    Default: 180
    AllowedValues:
      - 1
      - 3
      - 5
      - 7
      - 14
      - 30
      - 60
      - 90
      - 120
      - 150
      - 180
      - 365
      - 400
      - 545
      - 731
      - 1827
      - 3653

Conditions: 
  IsProd: !Equals [!Ref Environment, Prod]
  IsDev: !Equals [!Ref Environment, Dev]

Mappings:
  Environment:
    Dev:
      StateMachineLogLevel: ALL
    Prod:
      StateMachineLogLevel: ERROR

Resources:
{%- if include_common_lambda_layer %}
{%- set shared_lambda_name_path_safe = path_safe(common_lambda_layer_name) %}
  ############################################
  # Common Lambda Layer
  CommonLambdaLayer:
    Type: AWS::Lambda::LayerVersion
    Properties:
      Description: {{ module_name }} - Common Lambda Layer
      CompatibleRuntimes: 
        - python3.9
      Content: 
        S3Bucket: <<<ARTIFACT_BUCKET>>>
        S3Key: <<<{{- module_name_path_safe -}}_lambda_layers_{{- shared_lambda_name_path_safe -}}>>>
  # Common Lambda Layer
  ############################################
{% endif %}

{%- if include_lambda_scaffolding %}
{%- set lambda_list = lambda_names.split(",") %}
{%- for lambda_name in lambda_list %}
{%- set cleaned_lambda_name = lambda_name | trim | title | replace(" ", "")  %}
{%- set lambda_name_path_safe = path_safe(lambda_name) %}
  ############################################
  # {{ cleaned_lambda_name }} Lambda related
  {{ cleaned_lambda_name }}LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
        - !If [ IsDev, arn:aws:iam::aws:policy/AdministratorAccess, !Ref AWS::NoValue ]
      Policies:
      - PolicyName: AllowLambdaLogs
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: arn:aws:logs:*:*:*

  {{ cleaned_lambda_name }}Lambda:
    Type: AWS::Lambda::Function
    Properties:
      Description: {{ cleaned_lambda_name }} Lambda
      Handler: lambda_function.lambda_handler
      MemorySize: 1024
      Role: !GetAtt {{ cleaned_lambda_name }}LambdaExecutionRole.Arn
      {%- if include_common_lambda_layer %}
      Layers:
        - !Ref CommonLambdaLayer
      {%- endif %}
      Runtime: python3.11
      Timeout: 90
      Environment:
        Variables:
          LOG_LEVEL: !FindInMap [Environment, !Ref "Environment", StateMachineLogLevel]
      Code:
        S3Bucket: <<<ARTIFACT_BUCKET>>>
        S3Key: <<<{{ module_name_path_safe }}_lambda_functions_{{ lambda_name_path_safe }}>>>

  {{ cleaned_lambda_name }}LambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${InitialOneLambda}
      RetentionInDays: !Ref LogRetentionInDays
  # {{ cleaned_lambda_name }} Lambda related
  ############################################
{% endfor %}
{%- endif -%}
