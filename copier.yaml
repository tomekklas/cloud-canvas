# copier.yml

_min_copier_version: 8.3.0

_exclude:
  - notes.txt
  - .git*
  - copier.yaml
  - sandbox
  - demo-data.txt
  - scripts

_jinja_extensions:
    - jinja2_slug.SlugExtension
    - jinja2_time.TimeExtension

_post_generate: scripts/post_generate.py

# Constants
CLOUD_CANVAS_TEMPLATE_VERSION:
  type: str
  when: false
  default: v0.1

PRODUCT_VERSION: # perhasp this should be one of the questions?
  type: str
  when: false
  default: v1

# Questionnaire
module_name:
  type: str
  help: Choose a descriptive name for the module.
  validator: >-
    {% if not (module_name | regex_search('^(?! *$)(?!deployment$).+$')) %}
    Module name can not start or end with a space. "Deployment" word is reserved and can not be used.
    {% endif %}

# TODO: on re-generatin this remembers previous invokation value, not current one 
module_directory_name:
  type: str
  default: "{{ module_name | replace(' ', '-') | regex_replace('[^a-zA-Z0-9-]', '') | lower }}"
  help: Please provide module directory name (suggested based on previous answer)

short_module_description:
  type: str
  help: Please provide short module description (press Enter to skip)
  default: ""

include_lambda_scaffolding:
  help: Would you like to include lambda functions scaffolding?
  choices:
    - Yes
    - No
  default: No

lambda_names:
  type: str
  when: "{{ include_lambda_scaffolding == True }}"
  help: Please list your lambda names separated by commas.

include_common_lambda_layer:
  help: Would you like to build and include common lambda layer?
  when: "{{ include_lambda_scaffolding == True }}"
  choices:
    - Yes
    - No
  default: Yes

common_lambda_layer_name:
  type: str
  when: "{{ include_lambda_scaffolding == True and include_common_lambda_layer == True }}"
  help: Please provide name of the lambda layer function.

deployment_dev_bucket:
  type: str
  help: Which DEV bucket will the artifacts be uploaded to?
  validator: >-
    {% if not (deployment_dev_bucket) %} #  | regex_search('^(?=.{3,63}$)[a-z0-9][a-z0-9.-]*[a-z0-9]$')
    The name must be a valid S3 bucket name.
    {% endif %}

deployment_prod_bucket:
  type: str
  help: Which PROD bucket will the artifacts be uploaded to? It defaults to the dev bucket.
  default: "{{ deployment_dev_bucket }}"
  validator: >-
    {% if not (deployment_prod_bucket | regex_search('^(?=.{3,63}$)[a-z0-9][a-z0-9.-]*[a-z0-9]$')) %}
    The name must be a valid S3 bucket name.
    {% endif %}

add_deployment_setup:
  help: Would you like to add scaffolding of deployment setup?
  choices:
    - Yes
    - No
  default: Yes

deployment_stack_name_prefix:
  type: str
  when: "{{ add_deployment_setup == True }}"
  help: Defines CloudFormation stack prefix.
  # default: "{{ _copier_conf.dst_path }}-deployment"
  validator: >-
    {% if not (deployment_stack_name_prefix) %}
    The name must be specified.
    {% endif %}

deployment_default_role_to_assume:
  type: str
  when: "{{ add_deployment_setup == True }}"
  help: Role to assume when deploing to other accounts
  default: "CloudCanvasGenericCrossAccountAdminRole"
  validator: >-
    {% if not (deployment_default_role_to_assume) %}
    The name must be specified.
    {% endif %}

owner_name:
  type: str
  help: Please provide name of the project owner name (press Enter to skip)
  default: ""

owner_email:
  type: str
  help: Please provide one or more comma-separated emails of the project owner (press Enter to skip).
  default: ""
  validator: >-
    {% set email_pattern = '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$' %}
    {% set emails = owner_email.split(',') %}
    {% set is_valid = true %}
    {% for email in emails %}
      {% if not email | trim | regex_search(email_pattern) %}
        {% set is_valid = false %}
      {% endif %}
    {% endfor %}
    {% if not is_valid %}
      Invalid email address(es) provided.
    {% endif %}

copyright_license:
  type: str
  help: Your project's license
  default: Apache License 2.0
  choices:
    - Academic Free License v3.0
    - Apache License 2.0
    - Artistic License 2.0
    - BSD 2-Clause "Simplified" License
    - BSD 3-Clause Clear License
    - BSD 3-Clause "New" or "Revised" License
    - Boost Software License 1.0
    - Creative Commons Attribution 4.0
    - Creative Commons Attribution Share Alike 4.0
    - Creative Commons Zero v1.0 Universal
    - Do What The F*ck You Want To Public License
    - Educational Community License v2.0
    - Eclipse Public License 1.0
    - Eclipse Public License 2.0
    - European Union Public License 1.1
    - European Union Public License 1.2
    - GNU Affero General Public License v3.0
    - GNU General Public License v2.0
    - GNU General Public License v3.0
    - GNU Lesser General Public License v2.1
    - GNU Lesser General Public License v3.0
    - ISC License
    - LaTeX Project Public License v1.3c
    - MIT License
    - Mozilla Public License 2.0
    - Microsoft Public License
    - Microsoft Reciprocal License
    - University of Illinois/NCSA Open Source License
    - SIL Open Font License 1.1
    - Open Software License 3.0
    - PostgreSQL License
    - The Unlicense
    - zlib License

_message_before_copy: |
    Thank you for generating a project using Cloud Canvas.

    You'll be asked a series of questions whose answers will be used to
    generate a tailored project for you.

    If modules need to be added at later date, just re-run this command.

_message_after_copy: |
    Your project "{{ _copier_conf.dst_path }}" has been created successfully!

    Next steps:

    1. Change directory to the project root:

       $ cd {{ _copier_conf.dst_path }}

    2. Read "CONTRIBUING.md" and start coding.

_tasks:
  - >-
    # generate lambda directories from blueprint
    {% if lambda_names %}
      {% set lambda_list = lambda_names.split(",") %}
      {% for lambda_name in lambda_list %}
        cp -rf {{ module_directory_name }}/lambda/functions/blueprint {{ module_directory_name }}/lambda/functions/{{ lambda_name|trim|slug }}
      {% endfor %}
    {% endif %}
  - chmod +x codebuild_build.sh 
  - chmod +x local_build.sh
  # - chmod +x scripts/post_generate.py
  - >-
    # Pretty format all cloudformation yaml templates using aws rain
  # - /usr/bin/python3 scripts/post_generate.py
